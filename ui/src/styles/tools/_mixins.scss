@use './functions' as *;
@use 'sass:color';

$shades: (
  10: 10%,
  20: 20%,
  30: 30%,
  40: 40%,
  50: 50%,
  60: 60%,
  70: 70%,
  80: 80%,
  90: 90%,
);

$tints: (
  10: 10%,
  20: 20%,
  30: 30%,
  40: 40%,
  50: 50%,
  60: 60%,
  70: 70%,
  80: 80%,
  90: 90%,
);

$alphas: (
  10: -0.1,
  20: -0.2,
  30: -0.3,
  40: -0.4,
  50: -0.5,
  60: -0.6,
  70: -0.7,
  80: -0.8,
  90: -0.9,
);

@mixin build-theme ($theme) {

  @each $name, $value in map-get($theme, 'brand') {
    #{'--ns-'}#{$name}: #{$value};
    // ALPHA 透明度
    @each $a, $v in $alphas {
      #{'--ns-'}#{$name}#{'-'}#{$a}: color.adjust($value, $alpha: $v);
    }
    // TINT 加入白色
    @each $t, $v in $tints {
      #{'--ns-'}#{$name}#{'--'}#{$t}: color.mix(#ffffff, $value, $weight: $v);
    }
    // SHADE 加入黑色
    @each $s, $v in $shades {
      #{'--ns-'}#{$name}#{'---'}#{$s}: color.mix(#000000, $value, $weight: $v);
    }
  }

  @each $name, $value in map-get($theme, 'abstract') {
    #{'--ns-'}#{$name}: #{$value};
    .fill-#{$name} {
      background-color: var(--ns-#{$name});
    }
  }

  @each $name, $value in map-get($theme, 'layout') {
    #{'--ns-'}#{$name}: #{$value};
  }

  @each $name, $value in map-get($theme, 'states') {
    #{'--ns-'}#{$name}: #{$value};
  }

  @each $name, $value in map-get($theme, 'brand') {
    .fill-#{$name} {
      background-color: var(--ns-#{$name});
    }
    .color-#{$name} {
      background-color: var(--ns-#{$name});
      border-color: var(--ns-#{$name});
      @if lightness($value) > 80 {
        color: var(--ns-text)
      }
      @else {
        color: #fff;
      }
      &.variant-outlined {
        background-color: transparent;
        border-color: $value;
        color: $value;
      }
      &.variant-soft {
        background-color: color.adjust($value, $alpha: -0.25);
        border-color: color.adjust($value, $whiteness: +50%, $alpha: -0.4);
        color: color.adjust($value, $lightness: +40%);
      }
      &.variant-plain {
        background-color: transparent;
        border-color: transparent;
        color: color.adjust($value, $lightness: +25%);
        &:hover {
          background-color: #00000022;
        }
      }
      --nut-button-default-bg-color: #{$value};
      --nut-button-default-border-color: #{$value};
    }
  }
}
